import psutil
import os
import time
import sys
safe_executables = ['Glitched Studios Multi Tool.exe']
known_malware = [
    'Zeus.exe', 'CryptoLocker.exe', 'Stuxnet.exe', 'Conficker.exe', 
    'Ransom.Win32.Locky.exe', 'Trojan.Win32.Agent.exe', 'Virus.Win32.Sality.exe', 
    'Worm.Win32.NetSky.exe', 'Trojan.Win32.BHO.exe', 'Ransom.Win32.Cerber.exe', 
    'Virus.Win32.Virut.exe', 'Trojan.Win32.Alureon.exe', 'Worm.Win32.Mydoom.exe', 
    'Virus.Win32.Sasser.exe', 'Trojan.Win32.Vundo.exe', 'Ransom.Win32.TeslaCrypt.exe', 
    'Virus.Win32.Ramnit.exe', 'Worm.Win32.Koobface.exe', 'Trojan.Win32.Zbot.exe', 
    'Ransom.Win32.GandCrab.exe', 'Virus.Win32.SpyEye.exe', 'Trojan.Win32.Dyre.exe', 
    'Worm.Win32.Dorkbot.exe', 'Ransom.Win32.CryptXXX.exe', 'Virus.Win32.Lockscreen.exe', 
    'Trojan.Win32.Poweliks.exe', 'Worm.Win32.Spybot.exe', 'Ransom.Win32.Reveton.exe', 
    'Virus.Win32.Ransomware.exe'
]
no_log_path = 'output/others/malwarestopperlog/nolog.txt'

def load_no_log():
    if os.path.exists(no_log_path):
        with open(no_log_path, 'r') as f:
            return [line.strip() for line in f.readlines()]
    else:
        return []

def save_no_log(no_log):
    with open(no_log_path, 'w') as f:
        for process in no_log:
            f.write(process + '\n')

no_log = load_no_log()
def close_unknown_processes():
    unknown_processes = 0
    for proc in psutil.process_iter(['pid', 'name', 'cmdline', 'status']):
        try:
            if proc.info['name'] in safe_executables or proc.info['name'] in no_log:
                continue
            if proc.info['name'].endswith('.exe') or (proc.info['name'].endswith('.py') and proc.info['name'] != os.path.basename(__file__)):
                cmdline = proc.info['cmdline']
                if cmdline is None:
                    continue
                executable_name = os.path.basename(cmdline[0])
                if proc.info['status'] == psutil.STATUS_ZOMBIE:
                    print(f"Zombie process detected: {executable_name}")
                elif proc.info['status'] == psutil.STATUS_SLEEPING:
                    print(f"Background process detected: {executable_name}")
                elif executable_name == 'py.exe':
                    print(f"[System] This May Be A Python File You're Running, but if you want all .py files (except this one) to be closed, type yes: {executable_name}")
                else:
                    print(f"Unknown executable detected: {executable_name}")
                response = convo_before_close(executable_name)
                if response == "yes":
                    for p in psutil.process_iter(['pid', 'name']):
                        if p.info['name'] == proc.info['name']:
                            p.kill()
                            print(f"[{p.info['name']}] Killed")
                            while p.is_running():
                                time.sleep(0.1)
                elif response == "no":
                    save_response = input(f"Do you want to add {executable_name} to the no_log? (yes/no): ")
                    if save_response.lower() == "yes":
                        no_log.append(executable_name)
                        save_no_log(no_log)
                        print(f"{executable_name} added to no_log.")
                    else:
                        print(f"{executable_name} will not be added to no_log.")
                unknown_processes += 1
            elif proc.info['name'] in known_malware:
                cmdline = proc.info['cmdline']
                executable_name = os.path.basename(cmdline[0])
                print(f"Known malware detected: {executable_name}")
                response = convo_before_close(executable_name)
                if response == "yes":
                    for p in psutil.process_iter(['pid', 'name']):
                        if p.info['name'] == proc.info['name']:
                            p.kill()
                            print(f"[{p.info['name']}] Killed")
                            while p.is_running():
                                time.sleep(0.1)
                elif response == "no":
                    save_response = input(f"Do you want to add {executable_name} to the no_log? (yes/no): ")
                    if save_response.lower() == "yes":
                        no_log.append(executable_name)
                        save_no_log(no_log)
                        print(f"{executable_name} added to no_log.")
                    else:
                        print(f"{executable_name} will not be added to no_log.")
                unknown_processes += 1
        except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
            pass
    if unknown_processes == 0:
        print("Your Ok But Please Dont trust this process sometimes we miss stuff")
        sys.exit(0)

def convo_before_close(process_name):
    print(f"Warning: Unknown process detected - {process_name}")
    response = input("Do you want to close this process? (yes/no): ")
    if response.lower() in ['yes', 'Yes']:
        return "yes"
    elif response.lower() in ['no', 'No']:
        return "no"

if __name__ == "__main__":
    while True:
        close_unknown_processes()
        time.sleep(1)